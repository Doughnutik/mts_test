// Code generated by ogen, DO NOT EDIT.

package api

// Ref: #/components/schemas/AuthData
type AuthData struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetEmail returns the value of Email.
func (s *AuthData) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *AuthData) GetPassword() string {
	return s.Password
}

// SetEmail sets the value of Email.
func (s *AuthData) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *AuthData) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/AuthTokenResponse
type AuthTokenResponse struct {
	// JWT токен для аутентификации.
	Token OptString `json:"token"`
}

// GetToken returns the value of Token.
func (s *AuthTokenResponse) GetToken() OptString {
	return s.Token
}

// SetToken sets the value of Token.
func (s *AuthTokenResponse) SetToken(val OptString) {
	s.Token = val
}

func (*AuthTokenResponse) registerPostRes() {}

// Ref: #/components/schemas/BadRequestError
type BadRequestError struct {
	// Ошибка запроса.
	Detail OptString `json:"detail"`
}

// GetDetail returns the value of Detail.
func (s *BadRequestError) GetDetail() OptString {
	return s.Detail
}

// SetDetail sets the value of Detail.
func (s *BadRequestError) SetDetail(val OptString) {
	s.Detail = val
}

func (*BadRequestError) registerPostRes() {}

// Ref: #/components/schemas/InternalServerError
type InternalServerError struct {
	// Внутренняя ошибка.
	Detail OptString `json:"detail"`
}

// GetDetail returns the value of Detail.
func (s *InternalServerError) GetDetail() OptString {
	return s.Detail
}

// SetDetail sets the value of Detail.
func (s *InternalServerError) SetDetail(val OptString) {
	s.Detail = val
}

func (*InternalServerError) registerPostRes() {}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type RegisterPostConflict struct {
	// Email уже существует.
	Error OptString `json:"error"`
}

// GetError returns the value of Error.
func (s *RegisterPostConflict) GetError() OptString {
	return s.Error
}

// SetError sets the value of Error.
func (s *RegisterPostConflict) SetError(val OptString) {
	s.Error = val
}

func (*RegisterPostConflict) registerPostRes() {}
